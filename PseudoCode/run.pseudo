DECLARE a : REAL
DECLARE b : ARRAY[1:3, 1:4] OF INTEGER
DECLARE c : BOOLEAN
DECLARE Char : CHAR
a <- -(a + a * -a POW 2 POW 3) DIV 100 MOD 100
c <- a < 63 - 2.3 OR (a > 65 OR a > 63) AND NOT a < 65 AND TRUE
Char <- '\n'
OUTPUT a, a + 2 + a, c, Char
IF a <> 64 THEN
    OUTPUT b
ELSE
    OUTPUT a
ENDIF
b <- [[1, 2, 3, 4],[5, 6, 7, 8], [9, 10, 11, 12]]
b[2,3] <- 3
OUTPUT b
DECLARE Name : STRING
OUTPUT "What is your name?"
INPUT Name
OUTPUT "Hi, " & Name

DECLARE FibCount : INTEGER
DECLARE FibSeq : ARRAY[1:100] OF INTEGER
DECLARE TopCalculated : INTEGER
DECLARE ContinueFib : BOOLEAN
FibSeq[1] <- 1
FibSeq[2] <- 1
TopCalculated <- 2
ContinueFib <- TRUE
WHILE ContinueFib DO
    REPEAT
        OUTPUT "Input Fib Count (1 to 100):"
        INPUT FibCount
    UNTIL FibCount <= 100 AND FibCount >= 1
    WHILE TopCalculated < FibCount DO
        TopCalculated <- TopCalculated + 1
        FibSeq[TopCalculated] <- FibSeq[TopCalculated - 2] + FibSeq[TopCalculated - 1]
    ENDWHILE
    OUTPUT "The", FibCount, "th fibonacci number is:", FibSeq[FibCount]
    OUTPUT "The whole array is:", FibSeq
    OUTPUT "Continue?"
    INPUT ContinueFib
ENDWHILE