//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PseudoCode.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using AntlrDenter;

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class PseudoCodeLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Character=1, String=2, Date=3, NumberSequence=4, Boolean=5, NL=6, Newline=7, 
		Declare=8, Constant=9, IoKeyword=10, Typename=11, Array=12, Case=13, Of=14, 
		Otherwise=15, Endcase=16, For=17, To=18, Step=19, Next=20, While=21, Do=22, 
		Endwhile=23, Repeat=24, Until=25, If=26, Then=27, Else=28, Endif=29, Procedure=30, 
		Endprocedure=31, Call=32, Function=33, Endfunction=34, Byval=35, Byref=36, 
		Returns=37, Return=38, Type=39, Endtype=40, OpenFile=41, ReadFile=42, 
		WriteFile=43, CloseFile=44, Seek=45, GetRecord=46, PutRecord=47, Read=48, 
		Write=49, Append=50, Random=51, Class=52, Endclass=53, Inherits=54, Private=55, 
		Public=56, New=57, And=58, Or=59, Not=60, OpenParen=61, CloseParen=62, 
		OpenBrack=63, CloseBrack=64, OpenBrace=65, CloseBrace=66, Colon=67, Comma=68, 
		Dot=69, Add=70, Subtract=71, Multiply=72, BitAnd=73, IntDivide=74, Divide=75, 
		Mod=76, Pow=77, Caret=78, Equal=79, Greater=80, Smaller=81, GreaterEqual=82, 
		SmallerEqual=83, NotEqual=84, AssignmentNotation=85, Identifier=86, Skip=87, 
		UnknownChar=88;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"Character", "String", "Date", "NumberSequence", "Boolean", "NL", "Newline", 
		"Declare", "Constant", "IoKeyword", "Typename", "Array", "Case", "Of", 
		"Otherwise", "Endcase", "For", "To", "Step", "Next", "While", "Do", "Endwhile", 
		"Repeat", "Until", "If", "Then", "Else", "Endif", "Procedure", "Endprocedure", 
		"Call", "Function", "Endfunction", "Byval", "Byref", "Returns", "Return", 
		"Type", "Endtype", "OpenFile", "ReadFile", "WriteFile", "CloseFile", "Seek", 
		"GetRecord", "PutRecord", "Read", "Write", "Append", "Random", "Class", 
		"Endclass", "Inherits", "Private", "Public", "New", "And", "Or", "Not", 
		"OpenParen", "CloseParen", "OpenBrack", "CloseBrack", "OpenBrace", "CloseBrace", 
		"Colon", "Comma", "Dot", "Add", "Subtract", "Multiply", "BitAnd", "IntDivide", 
		"Divide", "Mod", "Pow", "Caret", "Equal", "Greater", "Smaller", "GreaterEqual", 
		"SmallerEqual", "NotEqual", "AssignmentNotation", "Identifier", "Skip", 
		"UnknownChar", "NonZeroDigit", "Digit", "Spaces", "Comment", "LineJoining", 
		"IdStart", "IdContinue", "SingleCharacter", "StringCharacters", "StringCharacter", 
		"EscapeSequence", "OctalEscape", "UnicodeEscape", "OctalDigit", "HexDigit", 
		"ZeroToThree"
	};


	private DenterHelper denter;
	  
	public override IToken NextToken()
	{
	    if (denter == null)
	    {
	        denter = DenterHelper.Builder()
	            .Nl(NL)
	            .Indent(PseudoCodeParser.INDENT)
	            .Dedent(PseudoCodeParser.DEDENT)
	            .PullToken(base.NextToken);
	    }

	    return denter.NextToken();
	}


	public PseudoCodeLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PseudoCodeLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, "'DECLARE'", "'CONSTANT'", 
		null, null, "'ARRAY'", "'CASE'", "'OF'", "'OTHERWISE'", "'ENDCASE'", "'FOR'", 
		"'TO'", "'STEP'", "'NEXT'", "'WHILE'", "'DO'", "'ENDWHILE'", "'REPEAT'", 
		"'UNTIL'", "'IF'", "'THEN'", "'ELSE'", "'ENDIF'", "'PROCEDURE'", "'ENDPROCEDURE'", 
		"'CALL'", "'FUNCTION'", "'ENDFUNCTION'", "'BYVAL'", "'BYREF'", "'RETURNS'", 
		"'RETURN'", "'TYPE'", "'ENDTYPE'", "'OPENFILE'", "'READFILE'", "'WRITEFILE'", 
		"'CLOSEFILE'", "'SEEK'", "'GETRECORD'", "'PUTRECORD'", "'READ'", "'WRITE'", 
		"'APPEND'", "'RANDOM'", "'CLASS'", "'ENDCLASS'", "'INHERITS'", "'PRIVATE'", 
		"'PUBLIC'", "'NEW'", "'AND'", "'OR'", "'NOT'", "'('", "')'", "'['", "']'", 
		"'{'", "'}'", "':'", "','", "'.'", "'+'", "'-'", "'*'", "'&'", "'DIV'", 
		"'/'", "'MOD'", "'POW'", "'^'", "'='", "'>'", "'<'", "'>='", "'<='", "'<>'", 
		"'<-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "Character", "String", "Date", "NumberSequence", "Boolean", "NL", 
		"Newline", "Declare", "Constant", "IoKeyword", "Typename", "Array", "Case", 
		"Of", "Otherwise", "Endcase", "For", "To", "Step", "Next", "While", "Do", 
		"Endwhile", "Repeat", "Until", "If", "Then", "Else", "Endif", "Procedure", 
		"Endprocedure", "Call", "Function", "Endfunction", "Byval", "Byref", "Returns", 
		"Return", "Type", "Endtype", "OpenFile", "ReadFile", "WriteFile", "CloseFile", 
		"Seek", "GetRecord", "PutRecord", "Read", "Write", "Append", "Random", 
		"Class", "Endclass", "Inherits", "Private", "Public", "New", "And", "Or", 
		"Not", "OpenParen", "CloseParen", "OpenBrack", "CloseBrack", "OpenBrace", 
		"CloseBrace", "Colon", "Comma", "Dot", "Add", "Subtract", "Multiply", 
		"BitAnd", "IntDivide", "Divide", "Mod", "Pow", "Caret", "Equal", "Greater", 
		"Smaller", "GreaterEqual", "SmallerEqual", "NotEqual", "AssignmentNotation", 
		"Identifier", "Skip", "UnknownChar"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PseudoCode.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PseudoCodeLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,88,825,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,1,0,1,0,
		1,0,1,0,1,0,1,0,1,0,1,0,3,0,218,8,0,1,1,1,1,3,1,222,8,1,1,1,1,1,1,2,1,
		2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,4,3,238,8,3,11,3,12,3,239,1,
		4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,251,8,4,1,5,3,5,254,8,5,1,5,1,5,
		5,5,258,8,5,10,5,12,5,261,9,5,1,6,3,6,264,8,6,1,6,1,6,3,6,268,8,6,1,6,
		3,6,271,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
		8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,301,8,9,1,10,
		1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,3,10,335,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,
		12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
		14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
		17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,
		20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,
		22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
		24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
		27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
		29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
		30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
		32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
		34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,
		36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,
		38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
		40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
		41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,
		43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,
		45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,
		46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,
		48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,
		50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,
		52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,
		54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,
		56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,
		60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,
		67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,
		73,1,73,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,77,1,77,1,
		78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,1,83,1,83,1,
		83,1,84,1,84,1,84,1,85,1,85,5,85,729,8,85,10,85,12,85,732,9,85,1,86,1,
		86,1,86,3,86,737,8,86,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,4,90,
		748,8,90,11,90,12,90,749,1,91,1,91,1,91,1,91,5,91,756,8,91,10,91,12,91,
		759,9,91,1,92,1,92,3,92,763,8,92,1,92,3,92,766,8,92,1,92,1,92,3,92,770,
		8,92,1,93,3,93,773,8,93,1,94,1,94,3,94,777,8,94,1,95,1,95,1,96,4,96,782,
		8,96,11,96,12,96,783,1,97,1,97,3,97,788,8,97,1,98,1,98,1,98,1,98,3,98,
		794,8,98,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,3,99,807,
		8,99,1,100,1,100,4,100,811,8,100,11,100,12,100,812,1,100,1,100,1,100,1,
		100,1,100,1,101,1,101,1,102,1,102,1,103,1,103,0,0,104,1,1,3,2,5,3,7,4,
		9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
		35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
		59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
		83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
		53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
		63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,
		73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,
		83,167,84,169,85,171,86,173,87,175,88,177,0,179,0,181,0,183,0,185,0,187,
		0,189,0,191,0,193,0,195,0,197,0,199,0,201,0,203,0,205,0,207,0,1,0,11,1,
		0,49,57,1,0,48,57,2,0,9,9,32,32,2,0,10,10,12,13,3,0,65,90,95,95,97,122,
		4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,34,34,92,92,8,0,34,34,39,39,
		92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,55,3,0,48,57,65,70,
		97,102,1,0,48,51,839,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
		9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
		0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
		31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
		0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
		0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
		1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
		0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
		1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
		0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
		0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
		0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
		0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
		0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,
		0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,
		0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,
		0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,
		1,217,1,0,0,0,3,219,1,0,0,0,5,225,1,0,0,0,7,237,1,0,0,0,9,250,1,0,0,0,
		11,253,1,0,0,0,13,267,1,0,0,0,15,272,1,0,0,0,17,280,1,0,0,0,19,300,1,0,
		0,0,21,334,1,0,0,0,23,336,1,0,0,0,25,342,1,0,0,0,27,347,1,0,0,0,29,350,
		1,0,0,0,31,360,1,0,0,0,33,368,1,0,0,0,35,372,1,0,0,0,37,375,1,0,0,0,39,
		380,1,0,0,0,41,385,1,0,0,0,43,391,1,0,0,0,45,394,1,0,0,0,47,403,1,0,0,
		0,49,410,1,0,0,0,51,416,1,0,0,0,53,419,1,0,0,0,55,424,1,0,0,0,57,429,1,
		0,0,0,59,435,1,0,0,0,61,445,1,0,0,0,63,458,1,0,0,0,65,463,1,0,0,0,67,472,
		1,0,0,0,69,484,1,0,0,0,71,490,1,0,0,0,73,496,1,0,0,0,75,504,1,0,0,0,77,
		511,1,0,0,0,79,516,1,0,0,0,81,524,1,0,0,0,83,533,1,0,0,0,85,542,1,0,0,
		0,87,552,1,0,0,0,89,562,1,0,0,0,91,567,1,0,0,0,93,577,1,0,0,0,95,587,1,
		0,0,0,97,592,1,0,0,0,99,598,1,0,0,0,101,605,1,0,0,0,103,612,1,0,0,0,105,
		618,1,0,0,0,107,627,1,0,0,0,109,636,1,0,0,0,111,644,1,0,0,0,113,651,1,
		0,0,0,115,655,1,0,0,0,117,659,1,0,0,0,119,662,1,0,0,0,121,666,1,0,0,0,
		123,668,1,0,0,0,125,670,1,0,0,0,127,672,1,0,0,0,129,674,1,0,0,0,131,676,
		1,0,0,0,133,678,1,0,0,0,135,680,1,0,0,0,137,682,1,0,0,0,139,684,1,0,0,
		0,141,686,1,0,0,0,143,688,1,0,0,0,145,690,1,0,0,0,147,692,1,0,0,0,149,
		696,1,0,0,0,151,698,1,0,0,0,153,702,1,0,0,0,155,706,1,0,0,0,157,708,1,
		0,0,0,159,710,1,0,0,0,161,712,1,0,0,0,163,714,1,0,0,0,165,717,1,0,0,0,
		167,720,1,0,0,0,169,723,1,0,0,0,171,726,1,0,0,0,173,736,1,0,0,0,175,740,
		1,0,0,0,177,742,1,0,0,0,179,744,1,0,0,0,181,747,1,0,0,0,183,751,1,0,0,
		0,185,760,1,0,0,0,187,772,1,0,0,0,189,776,1,0,0,0,191,778,1,0,0,0,193,
		781,1,0,0,0,195,787,1,0,0,0,197,793,1,0,0,0,199,806,1,0,0,0,201,808,1,
		0,0,0,203,819,1,0,0,0,205,821,1,0,0,0,207,823,1,0,0,0,209,210,5,39,0,0,
		210,211,3,191,95,0,211,212,5,39,0,0,212,218,1,0,0,0,213,214,5,39,0,0,214,
		215,3,197,98,0,215,216,5,39,0,0,216,218,1,0,0,0,217,209,1,0,0,0,217,213,
		1,0,0,0,218,2,1,0,0,0,219,221,5,34,0,0,220,222,3,193,96,0,221,220,1,0,
		0,0,221,222,1,0,0,0,222,223,1,0,0,0,223,224,5,34,0,0,224,4,1,0,0,0,225,
		226,3,179,89,0,226,227,3,179,89,0,227,228,5,47,0,0,228,229,3,179,89,0,
		229,230,3,179,89,0,230,231,5,47,0,0,231,232,3,179,89,0,232,233,3,179,89,
		0,233,234,3,179,89,0,234,235,3,179,89,0,235,6,1,0,0,0,236,238,3,179,89,
		0,237,236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,
		8,1,0,0,0,241,242,5,84,0,0,242,243,5,82,0,0,243,244,5,85,0,0,244,251,5,
		69,0,0,245,246,5,70,0,0,246,247,5,65,0,0,247,248,5,76,0,0,248,249,5,83,
		0,0,249,251,5,69,0,0,250,241,1,0,0,0,250,245,1,0,0,0,251,10,1,0,0,0,252,
		254,5,13,0,0,253,252,1,0,0,0,253,254,1,0,0,0,254,255,1,0,0,0,255,259,5,
		10,0,0,256,258,5,32,0,0,257,256,1,0,0,0,258,261,1,0,0,0,259,257,1,0,0,
		0,259,260,1,0,0,0,260,12,1,0,0,0,261,259,1,0,0,0,262,264,5,13,0,0,263,
		262,1,0,0,0,263,264,1,0,0,0,264,265,1,0,0,0,265,268,5,10,0,0,266,268,2,
		12,13,0,267,263,1,0,0,0,267,266,1,0,0,0,268,270,1,0,0,0,269,271,3,181,
		90,0,270,269,1,0,0,0,270,271,1,0,0,0,271,14,1,0,0,0,272,273,5,68,0,0,273,
		274,5,69,0,0,274,275,5,67,0,0,275,276,5,76,0,0,276,277,5,65,0,0,277,278,
		5,82,0,0,278,279,5,69,0,0,279,16,1,0,0,0,280,281,5,67,0,0,281,282,5,79,
		0,0,282,283,5,78,0,0,283,284,5,83,0,0,284,285,5,84,0,0,285,286,5,65,0,
		0,286,287,5,78,0,0,287,288,5,84,0,0,288,18,1,0,0,0,289,290,5,79,0,0,290,
		291,5,85,0,0,291,292,5,84,0,0,292,293,5,80,0,0,293,294,5,85,0,0,294,301,
		5,84,0,0,295,296,5,73,0,0,296,297,5,78,0,0,297,298,5,80,0,0,298,299,5,
		85,0,0,299,301,5,84,0,0,300,289,1,0,0,0,300,295,1,0,0,0,301,20,1,0,0,0,
		302,303,5,73,0,0,303,304,5,78,0,0,304,305,5,84,0,0,305,306,5,69,0,0,306,
		307,5,71,0,0,307,308,5,69,0,0,308,335,5,82,0,0,309,310,5,83,0,0,310,311,
		5,84,0,0,311,312,5,82,0,0,312,313,5,73,0,0,313,314,5,78,0,0,314,335,5,
		71,0,0,315,316,5,82,0,0,316,317,5,69,0,0,317,318,5,65,0,0,318,335,5,76,
		0,0,319,320,5,67,0,0,320,321,5,72,0,0,321,322,5,65,0,0,322,335,5,82,0,
		0,323,324,5,66,0,0,324,325,5,79,0,0,325,326,5,79,0,0,326,327,5,76,0,0,
		327,328,5,69,0,0,328,329,5,65,0,0,329,335,5,78,0,0,330,331,5,68,0,0,331,
		332,5,65,0,0,332,333,5,84,0,0,333,335,5,69,0,0,334,302,1,0,0,0,334,309,
		1,0,0,0,334,315,1,0,0,0,334,319,1,0,0,0,334,323,1,0,0,0,334,330,1,0,0,
		0,335,22,1,0,0,0,336,337,5,65,0,0,337,338,5,82,0,0,338,339,5,82,0,0,339,
		340,5,65,0,0,340,341,5,89,0,0,341,24,1,0,0,0,342,343,5,67,0,0,343,344,
		5,65,0,0,344,345,5,83,0,0,345,346,5,69,0,0,346,26,1,0,0,0,347,348,5,79,
		0,0,348,349,5,70,0,0,349,28,1,0,0,0,350,351,5,79,0,0,351,352,5,84,0,0,
		352,353,5,72,0,0,353,354,5,69,0,0,354,355,5,82,0,0,355,356,5,87,0,0,356,
		357,5,73,0,0,357,358,5,83,0,0,358,359,5,69,0,0,359,30,1,0,0,0,360,361,
		5,69,0,0,361,362,5,78,0,0,362,363,5,68,0,0,363,364,5,67,0,0,364,365,5,
		65,0,0,365,366,5,83,0,0,366,367,5,69,0,0,367,32,1,0,0,0,368,369,5,70,0,
		0,369,370,5,79,0,0,370,371,5,82,0,0,371,34,1,0,0,0,372,373,5,84,0,0,373,
		374,5,79,0,0,374,36,1,0,0,0,375,376,5,83,0,0,376,377,5,84,0,0,377,378,
		5,69,0,0,378,379,5,80,0,0,379,38,1,0,0,0,380,381,5,78,0,0,381,382,5,69,
		0,0,382,383,5,88,0,0,383,384,5,84,0,0,384,40,1,0,0,0,385,386,5,87,0,0,
		386,387,5,72,0,0,387,388,5,73,0,0,388,389,5,76,0,0,389,390,5,69,0,0,390,
		42,1,0,0,0,391,392,5,68,0,0,392,393,5,79,0,0,393,44,1,0,0,0,394,395,5,
		69,0,0,395,396,5,78,0,0,396,397,5,68,0,0,397,398,5,87,0,0,398,399,5,72,
		0,0,399,400,5,73,0,0,400,401,5,76,0,0,401,402,5,69,0,0,402,46,1,0,0,0,
		403,404,5,82,0,0,404,405,5,69,0,0,405,406,5,80,0,0,406,407,5,69,0,0,407,
		408,5,65,0,0,408,409,5,84,0,0,409,48,1,0,0,0,410,411,5,85,0,0,411,412,
		5,78,0,0,412,413,5,84,0,0,413,414,5,73,0,0,414,415,5,76,0,0,415,50,1,0,
		0,0,416,417,5,73,0,0,417,418,5,70,0,0,418,52,1,0,0,0,419,420,5,84,0,0,
		420,421,5,72,0,0,421,422,5,69,0,0,422,423,5,78,0,0,423,54,1,0,0,0,424,
		425,5,69,0,0,425,426,5,76,0,0,426,427,5,83,0,0,427,428,5,69,0,0,428,56,
		1,0,0,0,429,430,5,69,0,0,430,431,5,78,0,0,431,432,5,68,0,0,432,433,5,73,
		0,0,433,434,5,70,0,0,434,58,1,0,0,0,435,436,5,80,0,0,436,437,5,82,0,0,
		437,438,5,79,0,0,438,439,5,67,0,0,439,440,5,69,0,0,440,441,5,68,0,0,441,
		442,5,85,0,0,442,443,5,82,0,0,443,444,5,69,0,0,444,60,1,0,0,0,445,446,
		5,69,0,0,446,447,5,78,0,0,447,448,5,68,0,0,448,449,5,80,0,0,449,450,5,
		82,0,0,450,451,5,79,0,0,451,452,5,67,0,0,452,453,5,69,0,0,453,454,5,68,
		0,0,454,455,5,85,0,0,455,456,5,82,0,0,456,457,5,69,0,0,457,62,1,0,0,0,
		458,459,5,67,0,0,459,460,5,65,0,0,460,461,5,76,0,0,461,462,5,76,0,0,462,
		64,1,0,0,0,463,464,5,70,0,0,464,465,5,85,0,0,465,466,5,78,0,0,466,467,
		5,67,0,0,467,468,5,84,0,0,468,469,5,73,0,0,469,470,5,79,0,0,470,471,5,
		78,0,0,471,66,1,0,0,0,472,473,5,69,0,0,473,474,5,78,0,0,474,475,5,68,0,
		0,475,476,5,70,0,0,476,477,5,85,0,0,477,478,5,78,0,0,478,479,5,67,0,0,
		479,480,5,84,0,0,480,481,5,73,0,0,481,482,5,79,0,0,482,483,5,78,0,0,483,
		68,1,0,0,0,484,485,5,66,0,0,485,486,5,89,0,0,486,487,5,86,0,0,487,488,
		5,65,0,0,488,489,5,76,0,0,489,70,1,0,0,0,490,491,5,66,0,0,491,492,5,89,
		0,0,492,493,5,82,0,0,493,494,5,69,0,0,494,495,5,70,0,0,495,72,1,0,0,0,
		496,497,5,82,0,0,497,498,5,69,0,0,498,499,5,84,0,0,499,500,5,85,0,0,500,
		501,5,82,0,0,501,502,5,78,0,0,502,503,5,83,0,0,503,74,1,0,0,0,504,505,
		5,82,0,0,505,506,5,69,0,0,506,507,5,84,0,0,507,508,5,85,0,0,508,509,5,
		82,0,0,509,510,5,78,0,0,510,76,1,0,0,0,511,512,5,84,0,0,512,513,5,89,0,
		0,513,514,5,80,0,0,514,515,5,69,0,0,515,78,1,0,0,0,516,517,5,69,0,0,517,
		518,5,78,0,0,518,519,5,68,0,0,519,520,5,84,0,0,520,521,5,89,0,0,521,522,
		5,80,0,0,522,523,5,69,0,0,523,80,1,0,0,0,524,525,5,79,0,0,525,526,5,80,
		0,0,526,527,5,69,0,0,527,528,5,78,0,0,528,529,5,70,0,0,529,530,5,73,0,
		0,530,531,5,76,0,0,531,532,5,69,0,0,532,82,1,0,0,0,533,534,5,82,0,0,534,
		535,5,69,0,0,535,536,5,65,0,0,536,537,5,68,0,0,537,538,5,70,0,0,538,539,
		5,73,0,0,539,540,5,76,0,0,540,541,5,69,0,0,541,84,1,0,0,0,542,543,5,87,
		0,0,543,544,5,82,0,0,544,545,5,73,0,0,545,546,5,84,0,0,546,547,5,69,0,
		0,547,548,5,70,0,0,548,549,5,73,0,0,549,550,5,76,0,0,550,551,5,69,0,0,
		551,86,1,0,0,0,552,553,5,67,0,0,553,554,5,76,0,0,554,555,5,79,0,0,555,
		556,5,83,0,0,556,557,5,69,0,0,557,558,5,70,0,0,558,559,5,73,0,0,559,560,
		5,76,0,0,560,561,5,69,0,0,561,88,1,0,0,0,562,563,5,83,0,0,563,564,5,69,
		0,0,564,565,5,69,0,0,565,566,5,75,0,0,566,90,1,0,0,0,567,568,5,71,0,0,
		568,569,5,69,0,0,569,570,5,84,0,0,570,571,5,82,0,0,571,572,5,69,0,0,572,
		573,5,67,0,0,573,574,5,79,0,0,574,575,5,82,0,0,575,576,5,68,0,0,576,92,
		1,0,0,0,577,578,5,80,0,0,578,579,5,85,0,0,579,580,5,84,0,0,580,581,5,82,
		0,0,581,582,5,69,0,0,582,583,5,67,0,0,583,584,5,79,0,0,584,585,5,82,0,
		0,585,586,5,68,0,0,586,94,1,0,0,0,587,588,5,82,0,0,588,589,5,69,0,0,589,
		590,5,65,0,0,590,591,5,68,0,0,591,96,1,0,0,0,592,593,5,87,0,0,593,594,
		5,82,0,0,594,595,5,73,0,0,595,596,5,84,0,0,596,597,5,69,0,0,597,98,1,0,
		0,0,598,599,5,65,0,0,599,600,5,80,0,0,600,601,5,80,0,0,601,602,5,69,0,
		0,602,603,5,78,0,0,603,604,5,68,0,0,604,100,1,0,0,0,605,606,5,82,0,0,606,
		607,5,65,0,0,607,608,5,78,0,0,608,609,5,68,0,0,609,610,5,79,0,0,610,611,
		5,77,0,0,611,102,1,0,0,0,612,613,5,67,0,0,613,614,5,76,0,0,614,615,5,65,
		0,0,615,616,5,83,0,0,616,617,5,83,0,0,617,104,1,0,0,0,618,619,5,69,0,0,
		619,620,5,78,0,0,620,621,5,68,0,0,621,622,5,67,0,0,622,623,5,76,0,0,623,
		624,5,65,0,0,624,625,5,83,0,0,625,626,5,83,0,0,626,106,1,0,0,0,627,628,
		5,73,0,0,628,629,5,78,0,0,629,630,5,72,0,0,630,631,5,69,0,0,631,632,5,
		82,0,0,632,633,5,73,0,0,633,634,5,84,0,0,634,635,5,83,0,0,635,108,1,0,
		0,0,636,637,5,80,0,0,637,638,5,82,0,0,638,639,5,73,0,0,639,640,5,86,0,
		0,640,641,5,65,0,0,641,642,5,84,0,0,642,643,5,69,0,0,643,110,1,0,0,0,644,
		645,5,80,0,0,645,646,5,85,0,0,646,647,5,66,0,0,647,648,5,76,0,0,648,649,
		5,73,0,0,649,650,5,67,0,0,650,112,1,0,0,0,651,652,5,78,0,0,652,653,5,69,
		0,0,653,654,5,87,0,0,654,114,1,0,0,0,655,656,5,65,0,0,656,657,5,78,0,0,
		657,658,5,68,0,0,658,116,1,0,0,0,659,660,5,79,0,0,660,661,5,82,0,0,661,
		118,1,0,0,0,662,663,5,78,0,0,663,664,5,79,0,0,664,665,5,84,0,0,665,120,
		1,0,0,0,666,667,5,40,0,0,667,122,1,0,0,0,668,669,5,41,0,0,669,124,1,0,
		0,0,670,671,5,91,0,0,671,126,1,0,0,0,672,673,5,93,0,0,673,128,1,0,0,0,
		674,675,5,123,0,0,675,130,1,0,0,0,676,677,5,125,0,0,677,132,1,0,0,0,678,
		679,5,58,0,0,679,134,1,0,0,0,680,681,5,44,0,0,681,136,1,0,0,0,682,683,
		5,46,0,0,683,138,1,0,0,0,684,685,5,43,0,0,685,140,1,0,0,0,686,687,5,45,
		0,0,687,142,1,0,0,0,688,689,5,42,0,0,689,144,1,0,0,0,690,691,5,38,0,0,
		691,146,1,0,0,0,692,693,5,68,0,0,693,694,5,73,0,0,694,695,5,86,0,0,695,
		148,1,0,0,0,696,697,5,47,0,0,697,150,1,0,0,0,698,699,5,77,0,0,699,700,
		5,79,0,0,700,701,5,68,0,0,701,152,1,0,0,0,702,703,5,80,0,0,703,704,5,79,
		0,0,704,705,5,87,0,0,705,154,1,0,0,0,706,707,5,94,0,0,707,156,1,0,0,0,
		708,709,5,61,0,0,709,158,1,0,0,0,710,711,5,62,0,0,711,160,1,0,0,0,712,
		713,5,60,0,0,713,162,1,0,0,0,714,715,5,62,0,0,715,716,5,61,0,0,716,164,
		1,0,0,0,717,718,5,60,0,0,718,719,5,61,0,0,719,166,1,0,0,0,720,721,5,60,
		0,0,721,722,5,62,0,0,722,168,1,0,0,0,723,724,5,60,0,0,724,725,5,45,0,0,
		725,170,1,0,0,0,726,730,3,187,93,0,727,729,3,189,94,0,728,727,1,0,0,0,
		729,732,1,0,0,0,730,728,1,0,0,0,730,731,1,0,0,0,731,172,1,0,0,0,732,730,
		1,0,0,0,733,737,3,181,90,0,734,737,3,183,91,0,735,737,3,185,92,0,736,733,
		1,0,0,0,736,734,1,0,0,0,736,735,1,0,0,0,737,738,1,0,0,0,738,739,6,86,0,
		0,739,174,1,0,0,0,740,741,9,0,0,0,741,176,1,0,0,0,742,743,7,0,0,0,743,
		178,1,0,0,0,744,745,7,1,0,0,745,180,1,0,0,0,746,748,7,2,0,0,747,746,1,
		0,0,0,748,749,1,0,0,0,749,747,1,0,0,0,749,750,1,0,0,0,750,182,1,0,0,0,
		751,752,5,47,0,0,752,753,5,47,0,0,753,757,1,0,0,0,754,756,8,3,0,0,755,
		754,1,0,0,0,756,759,1,0,0,0,757,755,1,0,0,0,757,758,1,0,0,0,758,184,1,
		0,0,0,759,757,1,0,0,0,760,762,5,92,0,0,761,763,3,181,90,0,762,761,1,0,
		0,0,762,763,1,0,0,0,763,769,1,0,0,0,764,766,5,13,0,0,765,764,1,0,0,0,765,
		766,1,0,0,0,766,767,1,0,0,0,767,770,5,10,0,0,768,770,2,12,13,0,769,765,
		1,0,0,0,769,768,1,0,0,0,770,186,1,0,0,0,771,773,7,4,0,0,772,771,1,0,0,
		0,773,188,1,0,0,0,774,777,3,187,93,0,775,777,7,1,0,0,776,774,1,0,0,0,776,
		775,1,0,0,0,777,190,1,0,0,0,778,779,8,5,0,0,779,192,1,0,0,0,780,782,3,
		195,97,0,781,780,1,0,0,0,782,783,1,0,0,0,783,781,1,0,0,0,783,784,1,0,0,
		0,784,194,1,0,0,0,785,788,8,6,0,0,786,788,3,197,98,0,787,785,1,0,0,0,787,
		786,1,0,0,0,788,196,1,0,0,0,789,790,5,92,0,0,790,794,7,7,0,0,791,794,3,
		199,99,0,792,794,3,201,100,0,793,789,1,0,0,0,793,791,1,0,0,0,793,792,1,
		0,0,0,794,198,1,0,0,0,795,796,5,92,0,0,796,807,3,203,101,0,797,798,5,92,
		0,0,798,799,3,203,101,0,799,800,3,203,101,0,800,807,1,0,0,0,801,802,5,
		92,0,0,802,803,3,207,103,0,803,804,3,203,101,0,804,805,3,203,101,0,805,
		807,1,0,0,0,806,795,1,0,0,0,806,797,1,0,0,0,806,801,1,0,0,0,807,200,1,
		0,0,0,808,810,5,92,0,0,809,811,5,117,0,0,810,809,1,0,0,0,811,812,1,0,0,
		0,812,810,1,0,0,0,812,813,1,0,0,0,813,814,1,0,0,0,814,815,3,205,102,0,
		815,816,3,205,102,0,816,817,3,205,102,0,817,818,3,205,102,0,818,202,1,
		0,0,0,819,820,7,8,0,0,820,204,1,0,0,0,821,822,7,9,0,0,822,206,1,0,0,0,
		823,824,7,10,0,0,824,208,1,0,0,0,26,0,217,221,239,250,253,259,263,267,
		270,300,334,730,736,749,757,762,765,769,772,776,783,787,793,806,812,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
