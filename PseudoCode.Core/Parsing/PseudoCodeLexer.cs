//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PseudoCode.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using AntlrDenter;

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class PseudoCodeLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Character=1, String=2, Date=3, NumberSequence=4, Boolean=5, NL=6, Newline=7, 
		Declare=8, Constant=9, IoKeyword=10, Typename=11, Array=12, Set=13, Case=14, 
		Of=15, Otherwise=16, Endcase=17, For=18, To=19, Step=20, Next=21, While=22, 
		Do=23, Endwhile=24, Repeat=25, Until=26, If=27, Then=28, Else=29, Endif=30, 
		Procedure=31, Endprocedure=32, Call=33, Function=34, Endfunction=35, Byval=36, 
		Byref=37, Returns=38, Return=39, Type=40, Endtype=41, OpenFile=42, ReadFile=43, 
		WriteFile=44, CloseFile=45, Seek=46, GetRecord=47, PutRecord=48, Read=49, 
		Write=50, Append=51, Random=52, Class=53, Endclass=54, Inherits=55, Private=56, 
		Public=57, New=58, And=59, Or=60, Not=61, OpenParen=62, CloseParen=63, 
		OpenBrack=64, CloseBrack=65, OpenBrace=66, CloseBrace=67, Colon=68, Comma=69, 
		Dot=70, Add=71, Subtract=72, Multiply=73, BitAnd=74, IntDivide=75, Divide=76, 
		Mod=77, Pow=78, Caret=79, Equal=80, Greater=81, Smaller=82, GreaterEqual=83, 
		SmallerEqual=84, NotEqual=85, AssignmentNotation=86, Identifier=87, Skip=88, 
		UnknownChar=89;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"Character", "String", "Date", "NumberSequence", "Boolean", "NL", "Newline", 
		"Declare", "Constant", "IoKeyword", "Typename", "Array", "Set", "Case", 
		"Of", "Otherwise", "Endcase", "For", "To", "Step", "Next", "While", "Do", 
		"Endwhile", "Repeat", "Until", "If", "Then", "Else", "Endif", "Procedure", 
		"Endprocedure", "Call", "Function", "Endfunction", "Byval", "Byref", "Returns", 
		"Return", "Type", "Endtype", "OpenFile", "ReadFile", "WriteFile", "CloseFile", 
		"Seek", "GetRecord", "PutRecord", "Read", "Write", "Append", "Random", 
		"Class", "Endclass", "Inherits", "Private", "Public", "New", "And", "Or", 
		"Not", "OpenParen", "CloseParen", "OpenBrack", "CloseBrack", "OpenBrace", 
		"CloseBrace", "Colon", "Comma", "Dot", "Add", "Subtract", "Multiply", 
		"BitAnd", "IntDivide", "Divide", "Mod", "Pow", "Caret", "Equal", "Greater", 
		"Smaller", "GreaterEqual", "SmallerEqual", "NotEqual", "AssignmentNotation", 
		"Identifier", "Skip", "UnknownChar", "NonZeroDigit", "Digit", "Spaces", 
		"Comment", "LineJoining", "IdStart", "IdContinue", "SingleCharacter", 
		"StringCharacters", "StringCharacter", "EscapeSequence", "OctalEscape", 
		"UnicodeEscape", "OctalDigit", "HexDigit", "ZeroToThree"
	};


	private DenterHelper denter;
	  
	public override IToken NextToken()
	{
	    if (denter == null)
	    {
	        denter = DenterHelper.Builder()
	            .Nl(NL)
	            .Indent(PseudoCodeParser.INDENT)
	            .Dedent(PseudoCodeParser.DEDENT)
	            .PullToken(base.NextToken);
	    }

	    return denter.NextToken();
	}


	public PseudoCodeLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PseudoCodeLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, "'DECLARE'", "'CONSTANT'", 
		null, null, "'ARRAY'", "'SET'", "'CASE'", "'OF'", "'OTHERWISE'", "'ENDCASE'", 
		"'FOR'", "'TO'", "'STEP'", "'NEXT'", "'WHILE'", "'DO'", "'ENDWHILE'", 
		"'REPEAT'", "'UNTIL'", "'IF'", "'THEN'", "'ELSE'", "'ENDIF'", "'PROCEDURE'", 
		"'ENDPROCEDURE'", "'CALL'", "'FUNCTION'", "'ENDFUNCTION'", "'BYVAL'", 
		"'BYREF'", "'RETURNS'", "'RETURN'", "'TYPE'", "'ENDTYPE'", "'OPENFILE'", 
		"'READFILE'", "'WRITEFILE'", "'CLOSEFILE'", "'SEEK'", "'GETRECORD'", "'PUTRECORD'", 
		"'READ'", "'WRITE'", "'APPEND'", "'RANDOM'", "'CLASS'", "'ENDCLASS'", 
		"'INHERITS'", "'PRIVATE'", "'PUBLIC'", "'NEW'", "'AND'", "'OR'", "'NOT'", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "':'", "','", "'.'", "'+'", 
		"'-'", "'*'", "'&'", "'DIV'", "'/'", "'MOD'", "'POW'", "'^'", "'='", "'>'", 
		"'<'", "'>='", "'<='", "'<>'", "'<-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "Character", "String", "Date", "NumberSequence", "Boolean", "NL", 
		"Newline", "Declare", "Constant", "IoKeyword", "Typename", "Array", "Set", 
		"Case", "Of", "Otherwise", "Endcase", "For", "To", "Step", "Next", "While", 
		"Do", "Endwhile", "Repeat", "Until", "If", "Then", "Else", "Endif", "Procedure", 
		"Endprocedure", "Call", "Function", "Endfunction", "Byval", "Byref", "Returns", 
		"Return", "Type", "Endtype", "OpenFile", "ReadFile", "WriteFile", "CloseFile", 
		"Seek", "GetRecord", "PutRecord", "Read", "Write", "Append", "Random", 
		"Class", "Endclass", "Inherits", "Private", "Public", "New", "And", "Or", 
		"Not", "OpenParen", "CloseParen", "OpenBrack", "CloseBrack", "OpenBrace", 
		"CloseBrace", "Colon", "Comma", "Dot", "Add", "Subtract", "Multiply", 
		"BitAnd", "IntDivide", "Divide", "Mod", "Pow", "Caret", "Equal", "Greater", 
		"Smaller", "GreaterEqual", "SmallerEqual", "NotEqual", "AssignmentNotation", 
		"Identifier", "Skip", "UnknownChar"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PseudoCode.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PseudoCodeLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,89,831,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,220,8,0,1,1,1,1,3,1,224,8,1,1,
		1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,4,3,240,8,3,11,3,
		12,3,241,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,253,8,4,1,5,3,5,256,8,
		5,1,5,1,5,5,5,260,8,5,10,5,12,5,263,9,5,1,6,3,6,266,8,6,1,6,1,6,3,6,270,
		8,6,1,6,3,6,273,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
		8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,303,
		8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
		10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
		10,1,10,1,10,1,10,1,10,3,10,337,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,
		1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,
		1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
		1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
		1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
		1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,
		1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,
		1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
		1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,
		1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
		1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,
		1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
		1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
		1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,
		1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
		1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,
		1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,
		1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,
		1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,
		1,59,1,60,1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,
		1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,
		1,72,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,76,1,76,1,76,1,76,1,77,
		1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,82,
		1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,5,86,735,8,86,10,
		86,12,86,738,9,86,1,87,1,87,1,87,3,87,743,8,87,1,87,1,87,1,88,1,88,1,89,
		1,89,1,90,1,90,1,91,4,91,754,8,91,11,91,12,91,755,1,92,1,92,1,92,1,92,
		5,92,762,8,92,10,92,12,92,765,9,92,1,93,1,93,3,93,769,8,93,1,93,3,93,772,
		8,93,1,93,1,93,3,93,776,8,93,1,94,3,94,779,8,94,1,95,1,95,3,95,783,8,95,
		1,96,1,96,1,97,4,97,788,8,97,11,97,12,97,789,1,98,1,98,3,98,794,8,98,1,
		99,1,99,1,99,1,99,3,99,800,8,99,1,100,1,100,1,100,1,100,1,100,1,100,1,
		100,1,100,1,100,1,100,1,100,3,100,813,8,100,1,101,1,101,4,101,817,8,101,
		11,101,12,101,818,1,101,1,101,1,101,1,101,1,101,1,102,1,102,1,103,1,103,
		1,104,1,104,0,0,105,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
		23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
		47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
		71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,
		95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
		58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,
		68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,
		78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
		88,177,89,179,0,181,0,183,0,185,0,187,0,189,0,191,0,193,0,195,0,197,0,
		199,0,201,0,203,0,205,0,207,0,209,0,1,0,11,1,0,49,57,1,0,48,57,2,0,9,9,
		32,32,2,0,10,10,12,13,3,0,65,90,95,95,97,122,4,0,10,10,13,13,39,39,92,
		92,4,0,10,10,13,13,34,34,92,92,8,0,34,34,39,39,92,92,98,98,102,102,110,
		110,114,114,116,116,1,0,48,55,3,0,48,57,65,70,97,102,1,0,48,51,845,0,1,
		1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
		13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
		0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
		0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,
		0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,
		0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,1,219,1,0,0,
		0,3,221,1,0,0,0,5,227,1,0,0,0,7,239,1,0,0,0,9,252,1,0,0,0,11,255,1,0,0,
		0,13,269,1,0,0,0,15,274,1,0,0,0,17,282,1,0,0,0,19,302,1,0,0,0,21,336,1,
		0,0,0,23,338,1,0,0,0,25,344,1,0,0,0,27,348,1,0,0,0,29,353,1,0,0,0,31,356,
		1,0,0,0,33,366,1,0,0,0,35,374,1,0,0,0,37,378,1,0,0,0,39,381,1,0,0,0,41,
		386,1,0,0,0,43,391,1,0,0,0,45,397,1,0,0,0,47,400,1,0,0,0,49,409,1,0,0,
		0,51,416,1,0,0,0,53,422,1,0,0,0,55,425,1,0,0,0,57,430,1,0,0,0,59,435,1,
		0,0,0,61,441,1,0,0,0,63,451,1,0,0,0,65,464,1,0,0,0,67,469,1,0,0,0,69,478,
		1,0,0,0,71,490,1,0,0,0,73,496,1,0,0,0,75,502,1,0,0,0,77,510,1,0,0,0,79,
		517,1,0,0,0,81,522,1,0,0,0,83,530,1,0,0,0,85,539,1,0,0,0,87,548,1,0,0,
		0,89,558,1,0,0,0,91,568,1,0,0,0,93,573,1,0,0,0,95,583,1,0,0,0,97,593,1,
		0,0,0,99,598,1,0,0,0,101,604,1,0,0,0,103,611,1,0,0,0,105,618,1,0,0,0,107,
		624,1,0,0,0,109,633,1,0,0,0,111,642,1,0,0,0,113,650,1,0,0,0,115,657,1,
		0,0,0,117,661,1,0,0,0,119,665,1,0,0,0,121,668,1,0,0,0,123,672,1,0,0,0,
		125,674,1,0,0,0,127,676,1,0,0,0,129,678,1,0,0,0,131,680,1,0,0,0,133,682,
		1,0,0,0,135,684,1,0,0,0,137,686,1,0,0,0,139,688,1,0,0,0,141,690,1,0,0,
		0,143,692,1,0,0,0,145,694,1,0,0,0,147,696,1,0,0,0,149,698,1,0,0,0,151,
		702,1,0,0,0,153,704,1,0,0,0,155,708,1,0,0,0,157,712,1,0,0,0,159,714,1,
		0,0,0,161,716,1,0,0,0,163,718,1,0,0,0,165,720,1,0,0,0,167,723,1,0,0,0,
		169,726,1,0,0,0,171,729,1,0,0,0,173,732,1,0,0,0,175,742,1,0,0,0,177,746,
		1,0,0,0,179,748,1,0,0,0,181,750,1,0,0,0,183,753,1,0,0,0,185,757,1,0,0,
		0,187,766,1,0,0,0,189,778,1,0,0,0,191,782,1,0,0,0,193,784,1,0,0,0,195,
		787,1,0,0,0,197,793,1,0,0,0,199,799,1,0,0,0,201,812,1,0,0,0,203,814,1,
		0,0,0,205,825,1,0,0,0,207,827,1,0,0,0,209,829,1,0,0,0,211,212,5,39,0,0,
		212,213,3,193,96,0,213,214,5,39,0,0,214,220,1,0,0,0,215,216,5,39,0,0,216,
		217,3,199,99,0,217,218,5,39,0,0,218,220,1,0,0,0,219,211,1,0,0,0,219,215,
		1,0,0,0,220,2,1,0,0,0,221,223,5,34,0,0,222,224,3,195,97,0,223,222,1,0,
		0,0,223,224,1,0,0,0,224,225,1,0,0,0,225,226,5,34,0,0,226,4,1,0,0,0,227,
		228,3,181,90,0,228,229,3,181,90,0,229,230,5,47,0,0,230,231,3,181,90,0,
		231,232,3,181,90,0,232,233,5,47,0,0,233,234,3,181,90,0,234,235,3,181,90,
		0,235,236,3,181,90,0,236,237,3,181,90,0,237,6,1,0,0,0,238,240,3,181,90,
		0,239,238,1,0,0,0,240,241,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,
		8,1,0,0,0,243,244,5,84,0,0,244,245,5,82,0,0,245,246,5,85,0,0,246,253,5,
		69,0,0,247,248,5,70,0,0,248,249,5,65,0,0,249,250,5,76,0,0,250,251,5,83,
		0,0,251,253,5,69,0,0,252,243,1,0,0,0,252,247,1,0,0,0,253,10,1,0,0,0,254,
		256,5,13,0,0,255,254,1,0,0,0,255,256,1,0,0,0,256,257,1,0,0,0,257,261,5,
		10,0,0,258,260,5,32,0,0,259,258,1,0,0,0,260,263,1,0,0,0,261,259,1,0,0,
		0,261,262,1,0,0,0,262,12,1,0,0,0,263,261,1,0,0,0,264,266,5,13,0,0,265,
		264,1,0,0,0,265,266,1,0,0,0,266,267,1,0,0,0,267,270,5,10,0,0,268,270,2,
		12,13,0,269,265,1,0,0,0,269,268,1,0,0,0,270,272,1,0,0,0,271,273,3,183,
		91,0,272,271,1,0,0,0,272,273,1,0,0,0,273,14,1,0,0,0,274,275,5,68,0,0,275,
		276,5,69,0,0,276,277,5,67,0,0,277,278,5,76,0,0,278,279,5,65,0,0,279,280,
		5,82,0,0,280,281,5,69,0,0,281,16,1,0,0,0,282,283,5,67,0,0,283,284,5,79,
		0,0,284,285,5,78,0,0,285,286,5,83,0,0,286,287,5,84,0,0,287,288,5,65,0,
		0,288,289,5,78,0,0,289,290,5,84,0,0,290,18,1,0,0,0,291,292,5,79,0,0,292,
		293,5,85,0,0,293,294,5,84,0,0,294,295,5,80,0,0,295,296,5,85,0,0,296,303,
		5,84,0,0,297,298,5,73,0,0,298,299,5,78,0,0,299,300,5,80,0,0,300,301,5,
		85,0,0,301,303,5,84,0,0,302,291,1,0,0,0,302,297,1,0,0,0,303,20,1,0,0,0,
		304,305,5,73,0,0,305,306,5,78,0,0,306,307,5,84,0,0,307,308,5,69,0,0,308,
		309,5,71,0,0,309,310,5,69,0,0,310,337,5,82,0,0,311,312,5,83,0,0,312,313,
		5,84,0,0,313,314,5,82,0,0,314,315,5,73,0,0,315,316,5,78,0,0,316,337,5,
		71,0,0,317,318,5,82,0,0,318,319,5,69,0,0,319,320,5,65,0,0,320,337,5,76,
		0,0,321,322,5,67,0,0,322,323,5,72,0,0,323,324,5,65,0,0,324,337,5,82,0,
		0,325,326,5,66,0,0,326,327,5,79,0,0,327,328,5,79,0,0,328,329,5,76,0,0,
		329,330,5,69,0,0,330,331,5,65,0,0,331,337,5,78,0,0,332,333,5,68,0,0,333,
		334,5,65,0,0,334,335,5,84,0,0,335,337,5,69,0,0,336,304,1,0,0,0,336,311,
		1,0,0,0,336,317,1,0,0,0,336,321,1,0,0,0,336,325,1,0,0,0,336,332,1,0,0,
		0,337,22,1,0,0,0,338,339,5,65,0,0,339,340,5,82,0,0,340,341,5,82,0,0,341,
		342,5,65,0,0,342,343,5,89,0,0,343,24,1,0,0,0,344,345,5,83,0,0,345,346,
		5,69,0,0,346,347,5,84,0,0,347,26,1,0,0,0,348,349,5,67,0,0,349,350,5,65,
		0,0,350,351,5,83,0,0,351,352,5,69,0,0,352,28,1,0,0,0,353,354,5,79,0,0,
		354,355,5,70,0,0,355,30,1,0,0,0,356,357,5,79,0,0,357,358,5,84,0,0,358,
		359,5,72,0,0,359,360,5,69,0,0,360,361,5,82,0,0,361,362,5,87,0,0,362,363,
		5,73,0,0,363,364,5,83,0,0,364,365,5,69,0,0,365,32,1,0,0,0,366,367,5,69,
		0,0,367,368,5,78,0,0,368,369,5,68,0,0,369,370,5,67,0,0,370,371,5,65,0,
		0,371,372,5,83,0,0,372,373,5,69,0,0,373,34,1,0,0,0,374,375,5,70,0,0,375,
		376,5,79,0,0,376,377,5,82,0,0,377,36,1,0,0,0,378,379,5,84,0,0,379,380,
		5,79,0,0,380,38,1,0,0,0,381,382,5,83,0,0,382,383,5,84,0,0,383,384,5,69,
		0,0,384,385,5,80,0,0,385,40,1,0,0,0,386,387,5,78,0,0,387,388,5,69,0,0,
		388,389,5,88,0,0,389,390,5,84,0,0,390,42,1,0,0,0,391,392,5,87,0,0,392,
		393,5,72,0,0,393,394,5,73,0,0,394,395,5,76,0,0,395,396,5,69,0,0,396,44,
		1,0,0,0,397,398,5,68,0,0,398,399,5,79,0,0,399,46,1,0,0,0,400,401,5,69,
		0,0,401,402,5,78,0,0,402,403,5,68,0,0,403,404,5,87,0,0,404,405,5,72,0,
		0,405,406,5,73,0,0,406,407,5,76,0,0,407,408,5,69,0,0,408,48,1,0,0,0,409,
		410,5,82,0,0,410,411,5,69,0,0,411,412,5,80,0,0,412,413,5,69,0,0,413,414,
		5,65,0,0,414,415,5,84,0,0,415,50,1,0,0,0,416,417,5,85,0,0,417,418,5,78,
		0,0,418,419,5,84,0,0,419,420,5,73,0,0,420,421,5,76,0,0,421,52,1,0,0,0,
		422,423,5,73,0,0,423,424,5,70,0,0,424,54,1,0,0,0,425,426,5,84,0,0,426,
		427,5,72,0,0,427,428,5,69,0,0,428,429,5,78,0,0,429,56,1,0,0,0,430,431,
		5,69,0,0,431,432,5,76,0,0,432,433,5,83,0,0,433,434,5,69,0,0,434,58,1,0,
		0,0,435,436,5,69,0,0,436,437,5,78,0,0,437,438,5,68,0,0,438,439,5,73,0,
		0,439,440,5,70,0,0,440,60,1,0,0,0,441,442,5,80,0,0,442,443,5,82,0,0,443,
		444,5,79,0,0,444,445,5,67,0,0,445,446,5,69,0,0,446,447,5,68,0,0,447,448,
		5,85,0,0,448,449,5,82,0,0,449,450,5,69,0,0,450,62,1,0,0,0,451,452,5,69,
		0,0,452,453,5,78,0,0,453,454,5,68,0,0,454,455,5,80,0,0,455,456,5,82,0,
		0,456,457,5,79,0,0,457,458,5,67,0,0,458,459,5,69,0,0,459,460,5,68,0,0,
		460,461,5,85,0,0,461,462,5,82,0,0,462,463,5,69,0,0,463,64,1,0,0,0,464,
		465,5,67,0,0,465,466,5,65,0,0,466,467,5,76,0,0,467,468,5,76,0,0,468,66,
		1,0,0,0,469,470,5,70,0,0,470,471,5,85,0,0,471,472,5,78,0,0,472,473,5,67,
		0,0,473,474,5,84,0,0,474,475,5,73,0,0,475,476,5,79,0,0,476,477,5,78,0,
		0,477,68,1,0,0,0,478,479,5,69,0,0,479,480,5,78,0,0,480,481,5,68,0,0,481,
		482,5,70,0,0,482,483,5,85,0,0,483,484,5,78,0,0,484,485,5,67,0,0,485,486,
		5,84,0,0,486,487,5,73,0,0,487,488,5,79,0,0,488,489,5,78,0,0,489,70,1,0,
		0,0,490,491,5,66,0,0,491,492,5,89,0,0,492,493,5,86,0,0,493,494,5,65,0,
		0,494,495,5,76,0,0,495,72,1,0,0,0,496,497,5,66,0,0,497,498,5,89,0,0,498,
		499,5,82,0,0,499,500,5,69,0,0,500,501,5,70,0,0,501,74,1,0,0,0,502,503,
		5,82,0,0,503,504,5,69,0,0,504,505,5,84,0,0,505,506,5,85,0,0,506,507,5,
		82,0,0,507,508,5,78,0,0,508,509,5,83,0,0,509,76,1,0,0,0,510,511,5,82,0,
		0,511,512,5,69,0,0,512,513,5,84,0,0,513,514,5,85,0,0,514,515,5,82,0,0,
		515,516,5,78,0,0,516,78,1,0,0,0,517,518,5,84,0,0,518,519,5,89,0,0,519,
		520,5,80,0,0,520,521,5,69,0,0,521,80,1,0,0,0,522,523,5,69,0,0,523,524,
		5,78,0,0,524,525,5,68,0,0,525,526,5,84,0,0,526,527,5,89,0,0,527,528,5,
		80,0,0,528,529,5,69,0,0,529,82,1,0,0,0,530,531,5,79,0,0,531,532,5,80,0,
		0,532,533,5,69,0,0,533,534,5,78,0,0,534,535,5,70,0,0,535,536,5,73,0,0,
		536,537,5,76,0,0,537,538,5,69,0,0,538,84,1,0,0,0,539,540,5,82,0,0,540,
		541,5,69,0,0,541,542,5,65,0,0,542,543,5,68,0,0,543,544,5,70,0,0,544,545,
		5,73,0,0,545,546,5,76,0,0,546,547,5,69,0,0,547,86,1,0,0,0,548,549,5,87,
		0,0,549,550,5,82,0,0,550,551,5,73,0,0,551,552,5,84,0,0,552,553,5,69,0,
		0,553,554,5,70,0,0,554,555,5,73,0,0,555,556,5,76,0,0,556,557,5,69,0,0,
		557,88,1,0,0,0,558,559,5,67,0,0,559,560,5,76,0,0,560,561,5,79,0,0,561,
		562,5,83,0,0,562,563,5,69,0,0,563,564,5,70,0,0,564,565,5,73,0,0,565,566,
		5,76,0,0,566,567,5,69,0,0,567,90,1,0,0,0,568,569,5,83,0,0,569,570,5,69,
		0,0,570,571,5,69,0,0,571,572,5,75,0,0,572,92,1,0,0,0,573,574,5,71,0,0,
		574,575,5,69,0,0,575,576,5,84,0,0,576,577,5,82,0,0,577,578,5,69,0,0,578,
		579,5,67,0,0,579,580,5,79,0,0,580,581,5,82,0,0,581,582,5,68,0,0,582,94,
		1,0,0,0,583,584,5,80,0,0,584,585,5,85,0,0,585,586,5,84,0,0,586,587,5,82,
		0,0,587,588,5,69,0,0,588,589,5,67,0,0,589,590,5,79,0,0,590,591,5,82,0,
		0,591,592,5,68,0,0,592,96,1,0,0,0,593,594,5,82,0,0,594,595,5,69,0,0,595,
		596,5,65,0,0,596,597,5,68,0,0,597,98,1,0,0,0,598,599,5,87,0,0,599,600,
		5,82,0,0,600,601,5,73,0,0,601,602,5,84,0,0,602,603,5,69,0,0,603,100,1,
		0,0,0,604,605,5,65,0,0,605,606,5,80,0,0,606,607,5,80,0,0,607,608,5,69,
		0,0,608,609,5,78,0,0,609,610,5,68,0,0,610,102,1,0,0,0,611,612,5,82,0,0,
		612,613,5,65,0,0,613,614,5,78,0,0,614,615,5,68,0,0,615,616,5,79,0,0,616,
		617,5,77,0,0,617,104,1,0,0,0,618,619,5,67,0,0,619,620,5,76,0,0,620,621,
		5,65,0,0,621,622,5,83,0,0,622,623,5,83,0,0,623,106,1,0,0,0,624,625,5,69,
		0,0,625,626,5,78,0,0,626,627,5,68,0,0,627,628,5,67,0,0,628,629,5,76,0,
		0,629,630,5,65,0,0,630,631,5,83,0,0,631,632,5,83,0,0,632,108,1,0,0,0,633,
		634,5,73,0,0,634,635,5,78,0,0,635,636,5,72,0,0,636,637,5,69,0,0,637,638,
		5,82,0,0,638,639,5,73,0,0,639,640,5,84,0,0,640,641,5,83,0,0,641,110,1,
		0,0,0,642,643,5,80,0,0,643,644,5,82,0,0,644,645,5,73,0,0,645,646,5,86,
		0,0,646,647,5,65,0,0,647,648,5,84,0,0,648,649,5,69,0,0,649,112,1,0,0,0,
		650,651,5,80,0,0,651,652,5,85,0,0,652,653,5,66,0,0,653,654,5,76,0,0,654,
		655,5,73,0,0,655,656,5,67,0,0,656,114,1,0,0,0,657,658,5,78,0,0,658,659,
		5,69,0,0,659,660,5,87,0,0,660,116,1,0,0,0,661,662,5,65,0,0,662,663,5,78,
		0,0,663,664,5,68,0,0,664,118,1,0,0,0,665,666,5,79,0,0,666,667,5,82,0,0,
		667,120,1,0,0,0,668,669,5,78,0,0,669,670,5,79,0,0,670,671,5,84,0,0,671,
		122,1,0,0,0,672,673,5,40,0,0,673,124,1,0,0,0,674,675,5,41,0,0,675,126,
		1,0,0,0,676,677,5,91,0,0,677,128,1,0,0,0,678,679,5,93,0,0,679,130,1,0,
		0,0,680,681,5,123,0,0,681,132,1,0,0,0,682,683,5,125,0,0,683,134,1,0,0,
		0,684,685,5,58,0,0,685,136,1,0,0,0,686,687,5,44,0,0,687,138,1,0,0,0,688,
		689,5,46,0,0,689,140,1,0,0,0,690,691,5,43,0,0,691,142,1,0,0,0,692,693,
		5,45,0,0,693,144,1,0,0,0,694,695,5,42,0,0,695,146,1,0,0,0,696,697,5,38,
		0,0,697,148,1,0,0,0,698,699,5,68,0,0,699,700,5,73,0,0,700,701,5,86,0,0,
		701,150,1,0,0,0,702,703,5,47,0,0,703,152,1,0,0,0,704,705,5,77,0,0,705,
		706,5,79,0,0,706,707,5,68,0,0,707,154,1,0,0,0,708,709,5,80,0,0,709,710,
		5,79,0,0,710,711,5,87,0,0,711,156,1,0,0,0,712,713,5,94,0,0,713,158,1,0,
		0,0,714,715,5,61,0,0,715,160,1,0,0,0,716,717,5,62,0,0,717,162,1,0,0,0,
		718,719,5,60,0,0,719,164,1,0,0,0,720,721,5,62,0,0,721,722,5,61,0,0,722,
		166,1,0,0,0,723,724,5,60,0,0,724,725,5,61,0,0,725,168,1,0,0,0,726,727,
		5,60,0,0,727,728,5,62,0,0,728,170,1,0,0,0,729,730,5,60,0,0,730,731,5,45,
		0,0,731,172,1,0,0,0,732,736,3,189,94,0,733,735,3,191,95,0,734,733,1,0,
		0,0,735,738,1,0,0,0,736,734,1,0,0,0,736,737,1,0,0,0,737,174,1,0,0,0,738,
		736,1,0,0,0,739,743,3,183,91,0,740,743,3,185,92,0,741,743,3,187,93,0,742,
		739,1,0,0,0,742,740,1,0,0,0,742,741,1,0,0,0,743,744,1,0,0,0,744,745,6,
		87,0,0,745,176,1,0,0,0,746,747,9,0,0,0,747,178,1,0,0,0,748,749,7,0,0,0,
		749,180,1,0,0,0,750,751,7,1,0,0,751,182,1,0,0,0,752,754,7,2,0,0,753,752,
		1,0,0,0,754,755,1,0,0,0,755,753,1,0,0,0,755,756,1,0,0,0,756,184,1,0,0,
		0,757,758,5,47,0,0,758,759,5,47,0,0,759,763,1,0,0,0,760,762,8,3,0,0,761,
		760,1,0,0,0,762,765,1,0,0,0,763,761,1,0,0,0,763,764,1,0,0,0,764,186,1,
		0,0,0,765,763,1,0,0,0,766,768,5,92,0,0,767,769,3,183,91,0,768,767,1,0,
		0,0,768,769,1,0,0,0,769,775,1,0,0,0,770,772,5,13,0,0,771,770,1,0,0,0,771,
		772,1,0,0,0,772,773,1,0,0,0,773,776,5,10,0,0,774,776,2,12,13,0,775,771,
		1,0,0,0,775,774,1,0,0,0,776,188,1,0,0,0,777,779,7,4,0,0,778,777,1,0,0,
		0,779,190,1,0,0,0,780,783,3,189,94,0,781,783,7,1,0,0,782,780,1,0,0,0,782,
		781,1,0,0,0,783,192,1,0,0,0,784,785,8,5,0,0,785,194,1,0,0,0,786,788,3,
		197,98,0,787,786,1,0,0,0,788,789,1,0,0,0,789,787,1,0,0,0,789,790,1,0,0,
		0,790,196,1,0,0,0,791,794,8,6,0,0,792,794,3,199,99,0,793,791,1,0,0,0,793,
		792,1,0,0,0,794,198,1,0,0,0,795,796,5,92,0,0,796,800,7,7,0,0,797,800,3,
		201,100,0,798,800,3,203,101,0,799,795,1,0,0,0,799,797,1,0,0,0,799,798,
		1,0,0,0,800,200,1,0,0,0,801,802,5,92,0,0,802,813,3,205,102,0,803,804,5,
		92,0,0,804,805,3,205,102,0,805,806,3,205,102,0,806,813,1,0,0,0,807,808,
		5,92,0,0,808,809,3,209,104,0,809,810,3,205,102,0,810,811,3,205,102,0,811,
		813,1,0,0,0,812,801,1,0,0,0,812,803,1,0,0,0,812,807,1,0,0,0,813,202,1,
		0,0,0,814,816,5,92,0,0,815,817,5,117,0,0,816,815,1,0,0,0,817,818,1,0,0,
		0,818,816,1,0,0,0,818,819,1,0,0,0,819,820,1,0,0,0,820,821,3,207,103,0,
		821,822,3,207,103,0,822,823,3,207,103,0,823,824,3,207,103,0,824,204,1,
		0,0,0,825,826,7,8,0,0,826,206,1,0,0,0,827,828,7,9,0,0,828,208,1,0,0,0,
		829,830,7,10,0,0,830,210,1,0,0,0,26,0,219,223,241,252,255,261,265,269,
		272,302,336,736,742,755,763,768,771,775,778,782,789,793,799,812,818,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
